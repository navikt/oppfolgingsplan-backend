NAIS_CLUSTER_NAME: test

spring:
  profiles:
    active: test
  flyway:
    enabled: false
  datasource:
    url: 'jdbc:h2:mem:testdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false'
    username: SA
    password:
    driver-class-name: 'org.h2.Driver'
    hikari:
      minimum-idle: 1
      maximum-pool-size: 3
  kafka:
    consumer:
      bootstrap-servers: "localhost:9092"
      group-id: "test-consumer-group"
  h2.console:
    enabled: true
    path: '/h2'

management:
  endpoint.prometheus.enabled: true
  endpoints.web:
    base-path: /internal
    exposure.include: health,prometheus

no.nav.security.jwt:
  issuer:
    tokenx:
      discoveryurl: http://localhost:${mock-oauth2-server.port}/tokenx/.well-known/openid-configuration

azure:
  app:
    client:
      id: "1345678"
      secret: "secret"
  openid:
    config:
      token:
        endpoint: "https://login.microsoftonline.com/id/oauth2/v2.0/token"

token.x.client.id: "tokenx-client-id"
token.x.private.jwk: "tokenx-jwk"
token.x.token.endpoint: "https://tokenx-endpoint"

oppfolgingsplan.frontend.client.id: "localhost:team-esyfo:oppfolgingsplan-frontend"

nais.cluster.name: 'local'
environment.name: 'dev'

azure.openid.config.token.endpoint: "http://azure"
azure.app.client.id: 'client.id'
azure.app.client.secret: 'client.secret'
security.token.service.rest.url: "http://security-token-service.url"
ereg.url: "http://ereg"
aareg.services.url: "http://aareg-services.url"
aareg.scope: "scope"
felleskodeverk.url: "http://kodeverk.url"
felleskodeverk.scope: "felleskodeverk.scope"

krr.url: "http://krr.url"
krr.scope: "krr.scope"
